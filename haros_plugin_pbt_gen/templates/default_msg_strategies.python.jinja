{##############################################################################
 # Message Strategy Macros
 ##############################################################################}

{# Converts a message type (e.g. 'std_msgs/String') into a strategy name. #}
{% macro _type_to_strategy(name) -%}
ros_{{ name|replace('/', '_') }}
{%- endmacro %}

{# Converts a package and message names into a strategy name. #}
{% macro strategy_name(pkg, msg) -%}
ros_{{ pkg }}_{{ msg }}
{%- endmacro %}

{# Simple message field initialisation. Draws and assigns a value if the
    field is of a primitive type, otherwise initialises the field in-place,
    since building a ROS message already initialises all field trees below. #}
{% macro _init_simple_field(name, type_token) %}
{% if type_token.is_primitive or type_token.is_time or type_token.is_duration %}
msg.{{ name }} = draw({{ _type_to_strategy(type_token.type_name) }}()){# -#}
{% else %}{# modify in-place, ignore return value #}
draw({{ _type_to_strategy(type_token.type_name) }}(msg=msg.{{ name }})){# -#}
{% endif %}
{% endmacro %}

{# Builds a default message strategy for a given message type token.
    Default strategies draw all values at random, without constraints. #}
{% macro default_msg(ros_type) %}
@strategies.composite
def {{ strategy_name(ros_type.package, ros_type.message) }}(draw, msg=None):
    msg = msg or {{ ros_type.package }}.{{ ros_type.message }}()
    {% for field, type_token in ros_type.fields.items() %}
    {% if type_token.is_array %}
        {% if type_token.length is none %}
    msg.{{ field }} = draw(strategies.lists({# -#}
        {{ _type_to_strategy(type_token.type_name) }}()))
        {% else %}
    for i in range(len(msg.{{ field }})):
        {{ _init_simple_field(field ~ '[i]', type_token.type_token) }}
        {% endif %}
    {% else %}
    {{ _init_simple_field(field, type_token) }}
    {% endif %}
    {% endfor %}
    return msg
{% endmacro %}


{##############################################################################
 # Template Body
 ##############################################################################}

{% include "base_strategies.py" ignore missing %}

{% for type_token in type_tokens %}

{{ default_msg(type_token) }}
{% endfor %}
